pipeline {
    agent {
         docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage('Checkout Code') {
            steps {
                git credentialsId: 'githubcreds', url: 'https://github.com/Nisarg153/java-maven-sonar-argocd-helm-k8s.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // build the project and create a JAR file
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        stage('Sonaqube'){
            environment{
                SONAR_URL = "http://3.239.179.152:9000"
            }
            steps{
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "nisarg153/ultimate-cicd:${BUILD_NUMBER}"
                // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('DockerCreds')
            }
            steps {
                script {
                    sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "DockerCreds") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "java-maven-sonar-argocd-helm-k8s"
            GIT_USER_NAME = "Nisarg153"
        }
        steps {
            withCredentials([string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "nisarg150301@gmail.com"
                    git config user.name "Nisarg Chauhan"
        
                    # Ensure latest from GitHub
                    git pull https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} master
        
                    # Dynamically update image tag in deployment.yml
                    sed -i "s|\\(nisarg153/ultimate-cicd:\\).*|\\1${BUILD_NUMBER}|g" spring-boot-app-manifests/deployment.yml

                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
            }
        }
    }
    }
}
